name: Rust CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    # Checkout code
    - uses: actions/checkout@v4

    # ติดตั้ง Rust toolchain
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        components: rustfmt, clippy

    # Cache dependencies
    - name: Cache cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    # ตรวจสอบ format code
    - name: Check formatting
      run: cargo fmt --all -- --check

    # เรียกใช้ Clippy สำหรับ linting
    - name: Run Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    # สร้าง .env รันเฉพาะเมื่อไม่ได้มาจาก PR ของ fork
    - name: Create .env file (only if secrets available and safe)
      if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name }}
      run: |
        cat <<EOF > .env
        WEPAY_ENDPOINT=${{ secrets.WEPAY_ENDPOINT }}
        WEPAY_USERNAME=${{ secrets.WEPAY_USERNAME }}
        WEPAY_PASSWORD=${{ secrets.WEPAY_PASSWORD }}
        EOF

    # รัน tests เฉพาะถ้ามี secrets และไม่ใช่ fork PR
    - name: Run tests
      if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name }}
      run: cargo test --all-features --verbose